import re

def parse_nmap_output(raw_output):
    findings = {"ip": None, "ports": [], "os": None}
    ip_match = re.search(r"Nmap scan report for ([\d\.]+)", raw_output)
    if ip_match:
        findings["ip"] = ip_match.group(1)
    port_lines = re.findall(r"(\d+/tcp)\s+open\s+(\S+)\s+([^\n]*)", raw_output)
    for port, service, version in port_lines:
        findings["ports"].append({
            "port": port,
            "service": service,
            "version": version.strip()
        })
    os_match = re.search(r"OS details: (.+)", raw_output)
    if os_match:
        findings["os"] = os_match.group(1)
    return findings

def parse_whois_output(raw_output):
    findings = {
        "domain_name": None, "registrar": None, "creation_date": None,
        "expiry_date": None, "updated_date": None, "name_servers": [],
        "status": [], "registrant_organization": None,
        "registrant_country": None, "registrar_abuse_contact_email": None,
        "registrar_abuse_contact_phone": None
    }
    def search_field(field_name):
        pattern = re.compile(rf"^{field_name}:\s*(.+)$", re.IGNORECASE | re.MULTILINE)
        return pattern.findall(raw_output)
    domain_names = search_field("Domain Name")
    if domain_names:
        findings["domain_name"] = domain_names[0].strip()
    registrars = search_field("Registrar")
    if registrars:
        findings["registrar"] = registrars[0].strip()
    creation_dates = search_field("Creation Date")
    if creation_dates:
        findings["creation_date"] = creation_dates[0].strip()
    expiry_dates = search_field("Registry Expiry Date") or search_field("Registrar Registration Expiration Date")
    if expiry_dates:
        findings["expiry_date"] = expiry_dates[0].strip()
    updated_dates = search_field("Updated Date")
    if updated_dates:
        findings["updated_date"] = updated_dates[0].strip()
    registrant_orgs = search_field("Registrant Organization")
    if registrant_orgs:
        findings["registrant_organization"] = registrant_orgs[0].strip()
    registrant_countries = search_field("Registrant Country")
    if registrant_countries:
        findings["registrant_country"] = registrant_countries[0].strip()
    abuse_emails = search_field("Registrar Abuse Contact Email")
    if abuse_emails:
        findings["registrar_abuse_contact_email"] = abuse_emails[0].strip()
    abuse_phones = search_field("Registrar Abuse Contact Phone")
    if abuse_phones:
        findings["registrar_abuse_contact_phone"] = abuse_phones[0].strip()
    name_servers = search_field("Name Server")
    findings["name_servers"] = [ns.strip() for ns in name_servers]
    domain_statuses = search_field("Domain Status")
    findings["status"] = [status.strip() for status in domain_statuses]
    return findings

def parse_combined_fastscan_output(combined_output):
    nmap_section = re.search(r"--- Nmap Scan ---\n(.+?)\n\n", combined_output, re.DOTALL)
    whois_section = re.search(r"--- Whois Info ---\n(.+)", combined_output, re.DOTALL)
    nmap_output = nmap_section.group(1).strip() if nmap_section else ""
    whois_output = whois_section.group(1).strip() if whois_section else ""
    return {
        "nmap": parse_nmap_output(nmap_output),
        "whois": parse_whois_output(whois_output)
    }
