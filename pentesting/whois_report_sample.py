import subprocess
import re
from datetime import datetime

def run_whois_scan(domain):
    try:
        result = subprocess.run(
            ["whois", domain],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True,
            check=True
        )
        return result.stdout
    except subprocess.CalledProcessError as e:
        print("Error running whois:", e)
        return ""

def parse_whois_output(raw_output):
    findings = {
        "domain_name": None,
        "registrar": None,
        "creation_date": None,
        "expiry_date": None,
        "updated_date": None,
        "name_servers": [],
        "status": [],
        "registrant_organization": None,
        "registrant_country": None,
        "registrar_abuse_contact_email": None,
        "registrar_abuse_contact_phone": None,
    }
    
    # Regex helpers to find fields (case-insensitive)
    def search_field(field_name):
        pattern = re.compile(rf"^{field_name}:\s*(.+)$", re.IGNORECASE | re.MULTILINE)
        return pattern.findall(raw_output)

    # Single-value fields
    domain_names = search_field("Domain Name")
    if domain_names:
        findings["domain_name"] = domain_names[0].strip()

    registrars = search_field("Registrar")
    if registrars:
        findings["registrar"] = registrars[0].strip()

    creation_dates = search_field("Creation Date")
    if creation_dates:
        findings["creation_date"] = creation_dates[0].strip()

    expiry_dates = search_field("Registry Expiry Date") or search_field("Registrar Registration Expiration Date")
    if expiry_dates:
        findings["expiry_date"] = expiry_dates[0].strip()

    updated_dates = search_field("Updated Date")
    if updated_dates:
        findings["updated_date"] = updated_dates[0].strip()

    registrant_orgs = search_field("Registrant Organization")
    if registrant_orgs:
        findings["registrant_organization"] = registrant_orgs[0].strip()

    registrant_countries = search_field("Registrant Country")
    if registrant_countries:
        findings["registrant_country"] = registrant_countries[0].strip()

    abuse_emails = search_field("Registrar Abuse Contact Email")
    if abuse_emails:
        findings["registrar_abuse_contact_email"] = abuse_emails[0].strip()

    abuse_phones = search_field("Registrar Abuse Contact Phone")
    if abuse_phones:
        findings["registrar_abuse_contact_phone"] = abuse_phones[0].strip()

    # Multi-value fields: Name Servers and Domain Status (may appear multiple times)
    name_servers = search_field("Name Server")
    findings["name_servers"] = [ns.strip() for ns in name_servers]

    domain_statuses = search_field("Domain Status")
    findings["status"] = [status.strip() for status in domain_statuses]

    return findings


# Example usage:
target_domain = "google.com"
raw_whois_output = run_whois_scan(target_domain)
parsed_findings = parse_whois_output(raw_whois_output)

print("WHOIS Scan Findings:")
for k, v in parsed_findings.items():
    print(f"{k}: {v}")
